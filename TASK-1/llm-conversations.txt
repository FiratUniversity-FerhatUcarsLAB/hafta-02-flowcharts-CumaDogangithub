Şunu dedin:
kardeş merhaba bana atm sistemi nin algotirmasını sözde kod olarak verirmisin çok deteya girmeden
ChatGPT:

tabii! işte “çok detaya girmeyen” bir ATM sistemi sözde kodu (pseudocode). Metinsel, sade ve anlaşılır tuttum:

BAŞLA
  atmNakit = ATM_KASASINDAKI_TOPLAM
  denemeSayisi = 0
  MAX_DENEME = 3

  KARTI_AL()
  EĞER KART_OKUNAMADIysa
    MESAJ("Kart okunamadı. Kartı geri alın.")
    BİTİR
  SON

  TEKRAR
    PIN = KULLANICIDAN_PIN_AL()
    EĞER PIN_DOĞRUysa
      OTURUMU_AÇ()
      ÇIK
    DEĞİLSE
      denemeSayisi = denemeSayisi + 1
      MESAJ("Hatalı PIN. Kalan deneme: " + (MAX_DENEME - denemeSayisi))
    SON
  DENEME denemeSayisi < MAX_DENEME

  EĞER denemeSayisi == MAX_DENEMEysa
    KARTI_YUT()
    MESAJ("PIN deneme sınırı aşıldı. Kart alıkonuldu.")
    BİTİR
  SON

  TEKRAR
    MENÜYÜ_GÖSTER([
      1: "Para Çekme",
      2: "Para Yatırma",
      3: "Bakiye Sorgulama",
      4: "Havale/EFT",
      5: "Şifre Değiştir",
      0: "Kart İade / Çıkış"
    ])
    seçim = KULLANICIDAN_SEÇİM_AL()

    EĞER seçim == 1 ise
      tutar = TUTAR_AL()
      EĞER tutar <= 0 ise MESAJ("Geçersiz tutar."); DEVAM ET SON
      EĞER tutar % 10 != 0 ise MESAJ("10 TL katları olmalı."); DEVAM ET SON
      EĞER HESAP_BAKİYE < tutar ise MESAJ("Yetersiz bakiye."); DEVAM ET SON
      EĞER atmNakit < tutar ise MESAJ("ATM'de yeterli nakit yok."); DEVAM ET SON
      EĞER GÜNLÜK_LİMİT_AŞILIYOR(tutar) ise MESAJ("Günlük limit aşılıyor."); DEVAM ET SON
      HESAPTAN_DÜŞ(tutar)
      ATM_NAKİT_VER(tutar)
      atmNakit = atmNakit - tutar
      İSTERSE_FİŞ_BAS()
    ELSİF seçim == 2 ise
      zarfTutar = ZARF_TUTARI_OKU_VEYA_NAKİT_AL()
      EĞER zarfTutar <= 0 ise MESAJ("Geçersiz tutar."); DEVAM ET SON
      HESABA_EKLE_GEÇİCİ(zarfTutar)  // anında veya onay sonrası
      İSTERSE_FİŞ_BAS()
    ELSİF seçim == 3 ise
      MESAJ("Bakiye: " + HESAP_BAKİYEYİ_GETİR())
      İSTERSE_FİŞ_BAS()
    ELSİF seçim == 4 ise
      aliciIban = IBAN_AL()
      tutar = TUTAR_AL()
      EĞER tutar <= 0 ise MESAJ("Geçersiz tutar."); DEVAM ET SON
      EĞER HESAP_BAKİYE < tutar + TRANSFER_UCRETİ ise MESAJ("Yetersiz bakiye."); DEVAM ET SON
      EĞER IBAN_GEÇERSİZ(aliciIban) ise MESAJ("Geçersiz IBAN."); DEVAM ET SON
      HESAPTAN_DÜŞ(tutar + TRANSFER_UCRETİ)
      TRANSFER_GÖNDER(aliciIban, tutar)
      İSTERSE_FİŞ_BAS()
    ELSİF seçim == 5 ise
      eskiPin = KULLANICIDAN_PIN_AL("Eski PIN")
      EĞER eskiPin != GEÇERLİ_PIN ise MESAJ("Eski PIN hatalı."); DEVAM ET SON
      yeniPin = KULLANICIDAN_PIN_AL("Yeni PIN")
      EĞER PIN_KURALA_UYGUN_DEĞİL(yeniPin) ise MESAJ("PIN 4 haneli ve tekrar etmeyen olmalı."); DEVAM ET SON
      PIN_GÜNCELLE(yeniPin)
      MESAJ("PIN güncellendi.")
    ELSİF seçim == 0 ise
      ÇIK
    DEĞİLSE
      MESAJ("Geçersiz seçim.")
    SON

    DEVAM_MI = SOR("Başka işlem yapmak ister misiniz? (E/H)")
  DENEME DEVAM_MI == "E"

  KARTI_İADE_ET()
  MESAJ("İyi günler!")
BİTİR


İstersen bunu “para çekme” özelinde daha da kısaltılmış bir akış ya da DOT/akış diyagramına dönüştürülmüş haliyle de verebilirim.

Şunu dedin:
bunu metine dönüştür
ChatGPT:

Tabii kardeşim, işte yukarıdaki ATM sistemi algoritmasının metin (açıklamalı sözlü anlatım) hali, sade ve kısa tutulmuş şekilde:

ATM Sistemi Algoritması (Metinsel Anlatım)

Başlangıç:
ATM açılır ve kasadaki mevcut nakit miktarı belirlenir. Kullanıcı kartını takar.

Kart Doğrulama:
Kart okunamazsa işlem sonlandırılır ve kart iade edilir.

PIN Girişi:
Kullanıcıdan şifre (PIN) istenir.

Eğer doğru girerse sisteme giriş yapılır.

Hatalıysa 3 deneme hakkı verilir. Üçüncü hatadan sonra kart alıkonulur.

Ana Menü:
Kullanıcıya seçenekler sunulur:

Para çekme

Para yatırma

Bakiye sorgulama

Havale/EFT

Şifre değiştirme

Kart iade / Çıkış

Para Çekme İşlemi:
Kullanıcı çekmek istediği tutarı girer.

Tutar geçerli değilse veya 10 TL katı değilse uyarı verir.

Hesap bakiyesi veya ATM nakdi yetersizse işlem iptal edilir.

Uygunsa hesaptan düşülür, ATM parayı verir ve fiş isteği sorulur.

Para Yatırma İşlemi:
Kullanıcıdan zarf veya nakit alınır.
Tutar geçerli ise geçici olarak hesaba eklenir.

Bakiye Sorgulama:
Kullanıcının hesap bakiyesi ekranda gösterilir.

Havale/EFT:
Alıcının IBAN numarası ve gönderilecek tutar istenir.
IBAN geçerli ve bakiye yeterliyse para gönderilir.

Şifre Değiştirme:
Kullanıcı eski şifresini girer.
Doğruysa yeni şifre belirler ve sistem günceller.

Çıkış:
Kullanıcı isterse başka işlem yapabilir.
İstemiyorsa kart iade edilir ve “İyi günler” mesajı gösterilir.

İstersen bu metni daha da sadeleştirilmiş kısa versiyon (örneğin okul ödevi tarzı tek paragraf halinde) ya da akış şeması biçiminde (dot/diyagram formatında) da hazırlayabilirim. Hangisini istersin?

Şunu dedin:
bunu dot kodu olarak yaz
ChatGPT:
12s boyunca düşündüm
digraph ATM {
  rankdir=TB;
  node [shape=box, fontname="Arial", fontsize=11];

  start   [shape=circle, label="Başla"];
  init    [label="ATM nakit durumunu ve sayaçları hazırla"];
  insert  [label="Kart takıldı / Kartı oku"];
  cardOk  [shape=diamond, label="Kart okunabildi mi?"];
  reject  [label="Kartı iade et\nMesaj: Kart okunamadı"];
  end     [shape=doublecircle, label="Bitiş"];

  pin     [label="PIN iste"];
  pinOk   [shape=diamond, label="PIN doğru mu?"];
  incTry  [label="Deneme sayısını artır"];
  tryLeft [shape=diamond, label="Deneme < 3 mü?"];
  keep    [label="Kartı alıkoy\nMesaj: 3 hatalı PIN"];
  session [label="Oturumu aç"];

  menu    [label="MENÜ:\n1 Çekme | 2 Yatırma | 3 Bakiye\n4 Havale/EFT | 5 Şifre Değiştir | 0 Çıkış"];
  choice  [shape=diamond, label="Seçim?"];

  /* İşlemler */
  wd      [label="Para Çekme\nTutar iste"];
  wdOk    [shape=diamond, label="Tutar geçerli,\n10 TL katı,\nBakiye & ATM nakit yeterli,\nGünlük limit uygun mu?"];
  wdFail  [label="Mesaj: Koşullar sağlanmıyor"];
  wdDo    [label="Hesaptan düş\nATM para ver"];
  
  dep     [label="Para Yatırma\n(Nakit/Zarf)"];
  depOk   [shape=diamond, label="Tutar geçerli mi?"];
  depFail [label="Mesaj: Geçersiz tutar"];
  depDo   [label="Hesaba ekle\n(geçici/teyitli)"];

  bal     [label="Bakiye Sorgu\nBakiyeyi göster"];

  tr      [label="Havale/EFT\nIBAN + Tutar iste"];
  trOk    [shape=diamond, label="IBAN geçerli,\nBakiye masrafla yeterli mi?"];
  trFail  [label="Mesaj: IBAN/Bakiye hatası"];
  trDo    [label="Hesaptan düş\nTransfer gönder"];

  pinchg  [label="Şifre Değiştir\nEski PIN + Yeni PIN iste"];
  pcOk    [shape=diamond, label="Eski PIN doğru ve\nyeni PIN kurala uygun mu?"];
  pcFail  [label="Mesaj: PIN hatası/kuralsız"];
  pcDo    [label="PIN güncelle"];

  exitReq [label="Kartı iade et\nMesaj: İyi günler"];
  againQ  [shape=diamond, label="Başka işlem?"];
  
  /* Akış */
  start -> init -> insert -> cardOk;
  cardOk -> reject [label="Hayır"];
  reject -> end;
  cardOk -> pin [label="Evet"];

  pin -> pinOk;
  pinOk -> session [label="Evet"];
  pinOk -> incTry  [label="Hayır"];
  incTry -> tryLeft;
  tryLeft -> pin   [label="Evet"];
  tryLeft -> keep  [label="Hayır"];
  keep -> end;

  session -> menu -> choice;

  /* Seçimler */
  choice -> wd     [label="1"];
  choice -> dep    [label="2"];
  choice -> bal    [label="3"];
  choice -> tr     [label="4"];
  choice -> pinchg [label="5"];
  choice -> exitReq[label="0"];
  choice -> menu   [label="Diğer"];

  /* Para Çekme */
  wd -> wdOk;
  wdOk -> wdDo   [label="Evet"];
  wdOk -> wdFail [label="Hayır"];
  wdFail -> againQ;
  wdDo -> againQ;

  /* Para Yatırma */
  dep -> depOk;
  depOk -> depDo   [label="Evet"];
  depOk -> depFail [label="Hayır"];
  depFail -> againQ;
  depDo -> againQ;

  /* Bakiye */
  bal -> againQ;

  /* Transfer */
  tr -> trOk;
  trOk -> trDo   [label="Evet"];
  trOk -> trFail [label="Hayır"];
  trFail -> againQ;
  trDo -> againQ;

  /* PIN Değiştir */
  pinchg -> pcOk;
  pcOk -> pcDo   [label="Evet"];
  pcOk -> pcFail [label="Hayır"];
  pcFail -> againQ;
  pcDo -> againQ;

  /* Döngü & Çıkış */
  againQ -> menu   [label="Evet"];
  againQ -> exitReq[label="Hayır"];
  exitReq -> end;
}
