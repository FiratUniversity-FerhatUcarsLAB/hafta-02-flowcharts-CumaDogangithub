Şunu dedin:
merhaba kardeş bana Hastane Randevu Sistemi nin sözde kodunu yazarmısın metinsel olarak
ChatGPT:

tamamdır! aşağıda, “Hastane Randevu Sistemi” için akıcı ve gerçekçi bir metinsel sözde kod (pseudocode) var. Roller, temel veri yapıları ve ana akışlar modüler tutuldu. İstersen, bunu DOT diyagramına da çevirebilirim.

Hastane Randevu Sistemi – Sözde Kod (Metinsel)
SİSTEM ROLLERİ:
  ROL = { HASTA, DOKTOR, SEKRETER, YÖNETİCİ }

VERİ YAPILARI (özet):
  Hasta { id, tcNo, ad, soyad, telefon, email, sifreHash, sigortaNo, durum }
  Doktor { id, ad, soyad, brans, poliklinikId, calismaPlanı[ Gün -> ZamanAralığı[] ], durum }
  Poliklinik { id, ad, konum, durum }
  Randevu { id, hastaId, doktorId, poliklinikId, tarih, saat, durum, olusturmaZamani, not }
    // durum ∈ { REZERVE, ONAYLI, IPTAL, TAMAMLANDI, GECIKTI, NO_SHOW }
  BeklemeListesi { id, doktorId, tarih, saat, hastaId, öncelikSkoru, kayitZamani }
  Bildirim { id, hedefKullaniciId, tip, iletisimKanalı, mesaj, gonderimZamani, durum }
  KullaniciOturum { token, kullaniciId, rol, olusmaZamani, gecerlilikSonu }

SABİTLER:
  RANDEVU_SURESI = 15dk
  GEC_KAYIT_SINIRI = randevuSaatinden 10dk önce
  IPTAL_SINIRI = randevuSaatinden 2s önce
  NO_SHOW_ESIGI = randevuSaatinden 30dk sonra gelmeyen
  MAKS_GÜNLÜK_RANDEVU_HASTA = 2

BAŞLAT():
  VERI_TABANINI_BAGLA()
  ÖNBELLEK_BASLAT()
  KULLANICI_ARAYÜZÜ_YÜKLE()

KAYIT_OL(hastaBilgisi):
  EĞER TC_NO_GECERLI_MI(hastaBilgisi.tcNo) DEĞİLSE HATA("TC geçersiz")
  EĞER EMAIL_BOS_DEĞIL_MI(hastaBilgisi.email) DEĞİLSE HATA("Email gerekli")
  EĞER EMAIL_KAYITLI_MI(hastaBilgisi.email) İSE HATA("Email kullanımda")
  sifreHash = SIFRE_HASHLE(hastaBilgisi.sifre)
  hastaId = HASTA_KAYDET(hastaBilgisi, sifreHash)
  DÖN hastaId

GİRİS_YAP(kimlik, sifre):
  kayit = KULLANICI_BUL(kimlik)
  EĞER kayit YOKSA HATA("Kayıt bulunamadı")
  EĞER SIFRE_DOGRULA(sifre, kayit.sifreHash) DEĞİLSE HATA("Yanlış şifre")
  token = OTURUM_OLUSTUR(kayit.id, kayit.rol)
  DÖN token

DOKTOR_ARA(kriter):
  // kriter: brans, poliklinik, tarih aralığı, ad-soyad
  eslesen = DOKTORLARI_GETIR(kriter)
  DÖN eslesen

MÜSAİTLİK_SORGULA(doktorId, tarih):
  plan = DOKTOR_CALISMA_PLANI(doktorId, tarih)
  doluSlotlar = MEVCUT_RANDEVULAR(doktorId, tarih)
  bosSlotlar = SLOT_HESAPLA(plan, RANDEVU_SURESI) - doluSlotlar
  DÖN bosSlotlar

RANDEVU_OLUSTUR(hastaId, doktorId, poliklinikId, tarih, saat, not):
  // İşlem ATOMİK olmalı (yarış koşullarına karşı kilitle)
  TRANSAKSIYON_BASLAT()
    EĞER HASTA_GÜNLÜK_LIMITI_ASILDI_MI(hastaId, tarih, MAKS_GÜNLÜK_RANDEVU_HASTA) İSE
      TRANSAKSIYON_GERİ_AL(); HATA("Günlük limit aşıldı")

    EĞER SAAT_GECMIS_MI(tarih, saat) İSE
      TRANSAKSIYON_GERİ_AL(); HATA("Geçmişe randevu olmaz")

    EĞER SLOT_MÜSAİT_MI(doktorId, tarih, saat) DEĞİLSE
      TRANSAKSIYON_GERİ_AL(); HATA("Slot dolu")

    randevuId = RANDEVU_KAYDET({
      hastaId, doktorId, poliklinikId, tarih, saat,
      durum: REZERVE, olusturmaZamani: ŞİMDİ(), not
    })

    BILDIRIM_KUYRUGUNA_EKLE(hastaId,
      "Randevunuz oluşturuldu: " + tarih + " " + saat)

  TRANSAKSIYON_BITIR()
  DÖN randevuId

RANDEVU_ONAYLA(sekreterVeyaSistem, randevuId):
  EĞER YETKI_KONTROL(sekreterVeyaSistem, {SEKRETER, YÖNETİCİ, SİSTEM}) DEĞİLSE HATA("Yetki yok")
  RANDEVU_DURUM_GÜNCELLE(randevuId, ONAYLI)
  HASTAYA_BILDIR("Randevu onaylandı", randevuId)

RANDEVU_IPTAL_ET(iptalEdenId, rol, randevuId, neden):
  r = RANDEVU_GETIR(randevuId)
  EĞER r YOKSA HATA("Randevu yok")
  EĞER rol == HASTA VE ZAMAN_FARKI(r.tarih, r.saat, ŞİMDİ()) < IPTAL_SINIRI
       İSE HATA("İptal süresi dolmuş")

  RANDEVU_DURUM_GÜNCELLE(r.id, IPTAL, neden)
  HASTA_VE_DOKTORA_BILDIR("Randevu iptal", r.id)
  // boşalan slot için bekleme listesini tetikle
  BEKLEME_LISTESINI_TETIKLE(r.doktorId, r.tarih, r.saat)

RANDEVU_GÜNCELLE(hastaId, randevuId, yeniTarih, yeniSaat):
  r = RANDEVU_GETIR(randevuId)
  EĞER r.hastaId != hastaId İSE HATA("Yetkisiz")
  EĞER SAAT_GECMIS_MI(r.tarih, r.saat) İSE HATA("Geçmiş randevu güncellenemez")
  // önce eski slotu boşaltıp yeni slotu kilitle
  TRANSAKSIYON_BASLAT()
    EĞER SLOT_MÜSAİT_MI(r.doktorId, yeniTarih, yeniSaat) DEĞİLSE
       TRANSAKSIYON_GERİ_AL(); HATA("Yeni slot dolu")
    RANDEVU_SAAT_TARIH_GÜNCELLE(r.id, yeniTarih, yeniSaat)
    BEKLEME_LISTESINI_TETIKLE(r.doktorId, r.tarih, r.saat) // eski slot için
  TRANSAKSIYON_BITIR()
  HASTAYA_BILDIR("Randevunuz taşındı", r.id)

HASTA_CHECKIN(hastaId, randevuId):
  r = RANDEVU_GETIR(randevuId)
  EĞER r.hastaId != hastaId İSE HATA("Yetkisiz")
  EĞER GEÇ_KAYIT(r.tarih, r.saat, GEC_KAYIT_SINIRI) İSE
      NOT_AL("Hasta geç check-in") // uyarı
  RANDEVU_DURUM_GÜNCELLE(r.id, ONAYLI) // muayene için hazır

NO_SHOW_KONTROL():
  her randevu için:
    EĞER r.durum == ONAYLI VE ŞİMDİ() > r.saat + NO_SHOW_ESIGI
      RANDEVU_DURUM_GÜNCELLE(r.id, NO_SHOW)
      HASTAYA_BILDIR("Randevuya gelinmedi", r.id)

BEKLEME_LISTESINE_EKLE(hastaId, doktorId, tarih, saat):
  öncelik = ÖNCELIK_HESAPLA(hastaId) // engel durumu, aciliyet, yaş vb.
  BEKLEME_KAYDET(hastaId, doktorId, tarih, saat, öncelik)
  HASTAYA_BILDIR("Bekleme listesine alındınız", {doktorId, tarih, saat})

BEKLEME_LISTESINI_TETIKLE(doktorId, tarih, saat):
  aday = EN_YÜKSEK_ÖNCELIKLI_ADAY(doktorId, tarih, saat)
  EĞER aday VARSA
     // aday 15dk içinde onay verirse slotu tahsis et
     BILDIRIM_GÖNDER(aday.hastaId, "Slot boşaldı, onayla: 15dk")
     EĞER ADAY_ONAYI_GELDI_MI(15dk) İSE
        RANDEVU_OLUSTUR(aday.hastaId, doktorId, POLIKLINIK_BUL(doktorId), tarih, saat, "Bekleme -> Slot")
        BEKLEME_KAYDINI_SIL(aday.id)
     DEĞİLSE
        SONRAKI_ADAYA_GEÇ()

HATIRLATICI_GÖNDERIM_CRON():
  // Randevudan 24s ve 2s önce SMS/e-posta
  yarin = BUGÜN()+1 gün
  liste = YARININ_RANDEVULARI()
  HER r IN liste:
    BILDIRIM_GÖNDER(r.hastaId, "Yarın randevunuz var: " + r.tarih + " " + r.saat)

  ikiSaatSonra = ŞİMDİ()+~2s
  liste2 = IKI_SAAT_ICINDEKI_RANDEVULAR()
  HER r IN liste2:
    BILDIRIM_GÖNDER(r.hastaId, "2 saat sonra randevunuz var")

DOKTOR_TAKVIM_YÖNET(doktorId, gün, slotEkleSil):
  EĞER slotEkleSil.türü == "EKLE" İSE PLAN_SLOTLARI_EKLE(doktorId, gün, slotEkleSil.aralik)
  EĞER slotEkleSil.türü == "KALDIR" İSE
     EĞER O_GÜN_DOLU_RANDEVU_VAR_MI(doktorId, gün) İSE HATA("Önce taşı/iptal et")
     PLAN_SLOTLARI_SIL(doktorId, gün, slotEkleSil.aralik)

ACIL_DURUM_RANDEVUSU_ATA(sekreter, hastaId, doktorId, tarih, saat, acilKod):
  YETKI_KONTROL(sekreter, {SEKRETER, YÖNETİCİ}) YOKSA HATA
  // mevcut hastayı bir sonraki boş slota taşıyıp acile öncelik verme kuralları
  ESNEK_SLOT_TAHSİS_STRATEJİSİ(doktorId, tarih, saat, acilKod)

ÖDEME_ISLE (opsiyonel):
  // Eğer ücretli randevu ise
  ÖDEME_OLUSTUR(hastaId, randevuId, tutar)
  SONUÇ = SANAL_POS_TAHSILAT()
  EĞER SONUÇ == BAŞARILI İSE ODEME_KAYDET()
  DEĞİLSE HATA("Ödeme başarısız")

DENETİM_KAYDI(olayTipi, kullanıcıId, detay):
  LOG_YAZ(olayTipi, kullanıcıId, zaman=ŞİMDİ(), detay)

GÜVENLİK:
  - TÜM İŞLEMLERDE YETKİ_KONTROL()
  - GİZLİ VERİLER SIFRELENİR (örn. sifreHash, token)
  - ÇİFTE_KAYIT VE ÇAKIŞAN_SLOT ÖNLEYİCİ KİLİT (doktorId+tarih+saat) üzerinde
  - GİRİŞ DENEMELERİ ORAN SINIRLAMA

ANA AKIŞ ÖRNEĞİ (Hasta için):
  1) KAYIT_OL veya GİRİS_YAP
  2) DOKTOR_ARA({brans, poliklinik, tarihAralığı})
  3) MÜSAİTLİK_SORGULA(doktorId, seçiliTarih)
  4) RANDEVU_OLUSTUR(hastaId, doktorId, poliklinikId, tarih, saat, not)
  5) HATIRLATICI_GÖNDERIM_CRON otomatik çalışır
  6) HASTA_CHECKIN(hastaId, randevuId)
  7) Muayene sonrası randevu TAMAMLANDI olarak güncellenir

RAPORLAMA (Yönetici):
  - GÜNLÜK_RANDEVU_SAYISI(brans/poliklinik/doktor bazlı)
  - NO_SHOW_ORANI(dönemsel)
  - BEKLEME_LISTESI_KULLANIMI
  - DOLULUK_ORANI VE ORTALAMA_BEKLEME_SÜRESİ


istersen bir de “en basit hali” için çok kısa bir sürüm:

BASIT_AKIS:
  giriş → doktor ara → uygun saat seç → randevu oluştur
  → (24s ve 2s önce hatırlat) → hastane check-in → muayene → randevu tamamla
  (iptal/değiştir: süre kurallarına uygunsa)


Başka bir format (ör. adım adım madde madde) ya da DOT diyagramı da oluşturmamı ister misin?

Şunu dedin:
bunun metinsel olarak verirmisin
ChatGPT:

tamam kardeş—aynı sistemi bu kez tamamen metinsel anlatım olarak verdim (kod bloğu yok):

Hastane Randevu Sistemi — Metinsel Tanım

Amaç: Hastaların bir doktordan uygun saat için randevu almasını, randevuyu yönetmesini (onay, iptal, değişiklik), hatırlatmaların gönderilmesini ve hastane tarafında planlama/raporlama yapılmasını sağlamak.

Roller

Hasta: Kayıt olur, giriş yapar, doktor arar, uygun saat seçer, randevu alır/günceller/iptal eder, check-in yapar.

Doktor: Çalışma takvimini yönetir, randevu durumlarını güncelleyebilir.

Sekreter: Randevuları onaylar/iptal eder, acil durum randevusu atar, bekleme listesini yönetir.

Yönetici: Sistem ayarları, kullanıcı yetkileri ve raporlama.

Temel Veri Nesneleri

Hasta: kimlik (TC), ad-soyad, iletişim, şifre özeti, sigorta bilgisi, durum.

Doktor: ad-soyad, branş, poliklinik, günlük çalışma planı, durum.

Poliklinik: ad, konum, durum.

Randevu: hasta, doktor, poliklinik, tarih-saat, durum (rezerve, onaylı, iptal, tamamlandı, gecikti, no-show), oluşturulma zamanı, not.

Bekleme Listesi: doktor, tarih-saat, hasta, öncelik skoru, kayıt zamanı.

Bildirim: hedef kullanıcı, kanal (SMS/e-posta), mesaj, gönderim zamanı, durum.

Oturum: token, kullanıcı, rol, geçerlilik.

İş Kuralları ve Sınırlar

Randevu süre dilimi varsayılan 15 dakikadır.

Randevu iptali, randevu saatinden 2 saat öncesine kadar hasta tarafından yapılabilir.

Geç check-in eşiği randevu saatinden 10 dakika öncesidir (uyarı üretir).

No-show, randevu saatinden 30 dakika sonra gelinmemişse işaretlenir.

Hasta için günlük randevu limiti (örnek) 2 adettir.

Çakışmaları engellemek için aynı doktor+tarih+saat üzerinde kilit/atomik işlem uygulanır.

Ana İşlevler (Özet Akışlar)

Kayıt Olma: TC ve e-posta doğrulanır, şifre güvenli şekilde özetlenir, hasta kaydı oluşturulur.

Giriş Yapma: Kimlik ve şifre kontrol edilir, rol bilgili oturum üretilir (token).

Doktor Arama: Branş, poliklinik, tarih aralığı veya ad-soyad kriterlerine göre listeleme yapılır.

Müsaitlik Sorgulama: Doktorun çalışma planından 15 dakikalık slotlar hesaplanır, dolu slotlar düşülür, boş slotlar sunulur.

Randevu Oluşturma:

Geçmiş zamana randevu engellenir.

Hastanın günlük limitine bakılır.

Slot uygun değilse hata verilir.

Uygunsa “rezerv” durumunda randevu kaydedilir ve hastaya bildirim gönderilir.

Randevu Onaylama: Sekreter (veya kural bazlı otomasyon) randevuyu “onaylı” yapar; hastaya bildirilir.

Randevu İptali:

Hasta iptali: süre kuralı uygunsa yapılır.

Sekreter iptali: gerekçeyle yapılabilir.

İptalde bekleme listesi tetiklenir (boşalan slota aday çağrısı).

Randevu Güncelleme (Tarih/Saat Değişimi):

Eski slot boşaltılmadan önce yeni slot uygunluğu kontrol edilir.

Uygunsa randevu taşınır ve eski slot için bekleme listesi tetiklenir.

Hasta Check-in: Hasta randevuya geldiğini bildirir. Geç check-in uyarısı üretilebilir. Durum muayeneye hazır olacak şekilde güncellenir.

No-Show Kontrolü: Zamanı geçen onaylı randevular otomatik “no-show” yapılır ve hastaya bilgilendirme gider.

Bekleme Listesi Yönetimi:

Hasta uygun slot için bekleme listesine alınır, öncelik (aciliyet, engel, yaş vb.) ile sıralanır.

Slot boşalınca en yüksek öncelikli adaya 15 dakikalık onay penceresi gönderilir; onay gelirse slot atanır.

Hatırlatıcılar:

Randevudan 24 saat önce ve 2 saat önce otomatik SMS/e-posta hatırlatmaları gönderilir.

Doktor Takvim Yönetimi: Doktor gün/slot ekler veya kaldırır. Dolu slot varsa kaldırma engellenir (önce taşı/iptal).

Acil Durum Randevusu: Sekreter, kurallara göre mevcut hastayı uygun şekilde kaydırıp acil hastaya öncelik tanıyabilir.

(Opsiyonel) Ödeme: Ücretli randevularda tahsilat akışı çalıştırılır; başarılı ise kayıt altına alınır.

Güvenlik ve Denetim

Her işlemde rol-bazlı yetki kontrolü uygulanır.

Hassas veriler (şifre özeti, token) güvenli saklanır.

Giriş denemeleri için oran sınırlama uygulanır.

Tüm kritik olaylar denetim kaydına (log) yazılır.

Tipik Hasta Yolculuğu

Kayıt ol veya giriş yap.

Branş/poliklinik/tarih ile doktor ara.

Müsait slotları gör ve saat seç.

Randevu oluştur; onay ve hatırlatıcıları al.

Randevu günü check-in yap ve muayene ol.

Randevu “tamamlandı” durumuna çekilir.

Gerekirse kurallara uygun şekilde iptal veya yeniden planlama yap.

Raporlama (Yönetici)

Günlük/haftalık/aylık randevu sayıları (branş/poliklinik/doktor bazlı).

No-show oranı ve dönemsel eğilimler.

Bekleme listesinin kullanım ve dönüşüm oranı.

Doluluk oranı ve ortalama bekleme süresi.

İstersen bunu bir DOT diyagramına, akış şemasına ya da adım adım maddelemeye de çevirebilirim.

Şunu dedin:
bunu dot koduna dönüştür
ChatGPT:
10s boyunca düşündüm
digraph HRS {
  graph [rankdir=LR, fontsize=12, labelloc="t", label="Hastane Randevu Sistemi – Akış Diyagramı (DOT)"];
  node  [shape=box, style="rounded,filled", fillcolor="#f9fbff", color="#8aa0c8", fontname="Helvetica"];
  edge  [color="#6b7da8", fontname="Helvetica"];

  /* ===== Clusters (Roller) ===== */
  subgraph cluster_hasta {
    label="Hasta";
    color="#cfe1ff";
    style="rounded";
    start      [shape=circle, label="Başla", fillcolor="#eaf1ff"];
    kayit_giris [label="Kayıt Ol / Giriş Yap\n(TC & e-posta doğrulama,\nşifre özetleme, oturum token)"];
    doktor_ara  [label="Doktor Ara\n(branş/poliklinik/tarih/ad)"];
    musaitlik   [label="Müsaitlik Sorgula\n(15 dk slot hesapla,\ndolu slotları çıkar)"];
    slot_var?   [shape=diamond, label="Uygun slot var mı?"];
    randevu_ol  [label="Randevu Oluştur\n(Atomik: limit kontrolü,\ngeçmiş engeli, slot kilidi)"];
    bekleme_kayit [label="Bekleme Listesine Kaydol\n(öncelik skoru)"];
    bildirim_ol [label="Bildirim: Randevu Oluşturuldu"];
    iptal_istek [label="İptal İsteği"];
    iptal_kural? [shape=diamond, label="İptal süresi uygun mu?\n(≥ 2 saat kala)"];
    guncelle_istek [label="Tarih/Saat Değiştir İsteği"];
    yeni_slot?  [shape=diamond, label="Yeni slot uygun mu?"];
    tasima      [label="Randevuyu Taşı\n(eski slot boşalır)"];
    checkin     [label="Check-in (geliş bildirimi)"];
    gec_checkin? [shape=diamond, label="Geç check-in mi?\n(≤ 10 dk kala)"];
    uyar_gec    [label="Uyarı/Not: Geç Check-in"];
    muayene     [label="Muayene"];
    tamamlandi  [shape=doublecircle, label="Randevu: TAMAMLANDI", fillcolor="#eaf1ff"];
  }

  subgraph cluster_sekreter {
    label="Sekreter / Operasyon";
    color="#d6f5ff"; style="rounded";
    onay       [label="Randevu Onayla\n(otomasyon veya el ile)"];
    iptal_op   [label="Randevuyu İptal Et\n(gerekçeyle)"];
    acil       [label="Acil Durum Randevusu\n(öncelik tanı, esnek tahsis)"];
  }

  subgraph cluster_sistem {
    label="Sistem Otomasyonları";
    color="#e8ffe6"; style="rounded";
    hatirlat_24 [label="Hatırlatıcı: 24 saat önce\n(SMS/e-posta)"];
    hatirlat_2  [label="Hatırlatıcı: 2 saat önce\n(SMS/e-posta)"];
    no_show_k   [label="No-Show Kontrolü\n(+30 dk gelmeyenleri işaretle)"];
    bekleme_tetik [label="Bekleme Listesi Tetikle\n(slot boşalınca)"];
    aday_bildirim [label="Adaya Bildirim: Slot Boşaldı\n(15 dk onay penceresi)"];
    aday_onay?  [shape=diamond, label="Aday onay verdi mi?\n(≤ 15 dk)"];
    aday_ata    [label="Slotu Adaya Ata\n(Yeni randevu oluştur)"];
  }

  subgraph cluster_doktor {
    label="Doktor";
    color="#fff0d6"; style="rounded";
    takvim_yonet [label="Takvimi Yönet\n(slot ekle/kaldır)\n(Dolu slot varsa engel)"];
    randevu_durum [label="Randevu Durum Güncelle\n(ör. muayene başlat/bitti)"];
  }

  subgraph cluster_yonetim {
    label="Yönetici / Raporlama";
    color="#f3e8ff"; style="rounded";
    raporlama  [label="Raporlama:\n• Randevu sayıları\n• No-show oranı\n• Bekleme listesi dönüşüm\n• Doluluk & bekleme süresi"];
  }

  /* ===== Güvenlik & Log ===== */
  guvenlik [label="Güvenlik:\n• Rol bazlı yetki\n• Oran sınırlama (login)\n• Hassas veri koruma", shape=note, fillcolor="#fff9e6", color="#d3b24d"];
  loglama  [label="Denetim Kaydı (LOG)\nTüm kritik olaylar", shape=note, fillcolor="#fff9e6", color="#d3b24d"];

  /* ===== Akış Kenarları (Hasta Yolculuğu) ===== */
  start -> kayit_giris;
  kayit_giris -> doktor_ara;
  doktor_ara -> musaitlik;
  musaitlik -> slot_var?;
  slot_var? -> randevu_ol [label="Evet"];
  slot_var? -> bekleme_kayit [label="Hayır"];

  randevu_ol -> onay;
  onay -> bildirim_ol;
  bildirim_ol -> hatirlat_24;
  hatirlat_24 -> hatirlat_2;

  /* Güncelleme / İptal akışları */
  bildirim_ol -> guncelle_istek [label="Hasta isteği (yeniden planlama)"];
  guncelle_istek -> yeni_slot?;
  yeni_slot? -> tasima [label="Evet"];
  yeni_slot? -> guncelle_istek [label="Hayır", style=dashed];

  bildirim_ol -> iptal_istek [label="Hasta isteği (iptal)"];
  iptal_istek -> iptal_kural?;
  iptal_kural? -> iptal_op [label="Evet"];
  iptal_kural? -> iptal_istek [label="Hayır", style=dashed];

  /* Randevu günü */
  hatirlat_2 -> checkin;
  checkin -> gec_checkin?;
  gec_checkin? -> uyar_gec [label="Evet"];
  gec_checkin? -> muayene [label="Hayır"];
  uyar_gec -> muayene;
  muayene -> randevu_durum;
  randevu_durum -> tamamlandi;

  /* No-Show ve Bekleme Listesi */
  hatirlat_2 -> no_show_k [label="Zaman akışı"];
  iptal_op -> bekleme_tetik;
  tasima -> bekleme_tetik [label="Eski slot için"];
  bekleme_kayit -> bekleme_tetik [label="Slot boşalınca", style=dashed];
  bekleme_tetik -> aday_bildirim;
  aday_bildirim -> aday_onay?;
  aday_onay? -> aday_ata [label="Evet"];
  aday_onay? -> bekleme_tetik [label="Hayır → Sonraki aday"];

  /* Doktor ve Yönetim bağlantıları */
  takvim_yonet -> doktor_ara [label="Güncel planın etkisi", style=dashed];
  raporlama -> takvim_yonet [label="İyileştirme için geri besleme", style=dashed];

  /* Güvenlik & Log (genel, noktalı) */
  guvenlik -> kayit_giris [style=dotted];
  guvenlik -> randevu_ol   [style=dotted];
  guvenlik -> iptal_op     [style=dotted];
  guvenlik -> takvim_yonet [style=dotted];

  loglama -> kayit_giris   [style=dotted];
  loglama -> randevu_ol    [style=dotted];
  loglama -> iptal_op      [style=dotted];
  loglama -> aday_ata      [style=dotted];
  loglama -> randevu_durum [style=dotted];

  /* Kenar etiketleri (iş kuralları) */
  randevu_ol -> bildirim_ol [label="Durum: REZERVE/ONAYLI"];
  iptal_op -> bekleme_tetik [label="Slot boşaldı"];
  no_show_k -> raporlama    [label="No-show oranları", style=dashed];
  tamamlandi -> raporlama   [label="Tamamlanan işlemler", style=dashed];
}
